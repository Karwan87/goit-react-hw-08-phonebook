{"version":3,"file":"static/js/587.a0decd0c.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Contact/ContactList.module.css?6fca","components/Contact/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form/ContactForm.module.css?cbfb","components/Form/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPage/Contacts.module.css?4a20","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filters.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"ContactList_Container__OUnUd\",\"List\":\"ContactList_List__TRupE\",\"ListIcon\":\"ContactList_ListIcon__3QQRp\",\"ListItem\":\"ContactList_ListItem__OU7Sq\",\"DeleteButton\":\"ContactList_DeleteButton__qRjKx\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectContactsFilter,\n} from '../../redux/contacts/selectors';\nimport { Box } from '@chakra-ui/react';\nimport { Button, List, ListItem, ListIcon } from '@chakra-ui/react';\nimport { MdSettingsCell } from 'react-icons/md';\nimport styles from './ContactList.module.css';\n\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n\n  const filterValue = useSelector(selectContactsFilter).toLowerCase();\n\n  const dispatch = useDispatch();\n\n  const handleDelete = contact => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n\n  return (\n    <Box className={styles.Container}>\n      <List className={styles.List}>\n        {visibilityContacts.map(contact => (\n          <ListItem className={styles.ListItem} key={contact.id}>\n            <ListIcon className={styles.ListIcon} as={MdSettingsCell} />\n            {contact.name}: <span>{contact.number}</span>\n            <Button\n              className={styles.DeleteButton}\n              onClick={() => handleDelete(contact)}\n            >\n              Delete\n            </Button>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Filter_Container__2veh+\",\"Label\":\"Filter_Label__MldcW\",\"inputsForm\":\"Filter_inputsForm__e07Ty\"};","import { useDispatch } from 'react-redux';\nimport { setFilterContacts } from '../../redux/contacts/filtersSlice';\nimport { Box } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\nimport { ContactList } from '../Contact/ContactList';\nimport styles from './Filter.module.css';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handlerFilter = evt => {\n    dispatch(setFilterContacts(evt.target.value));\n  };\n\n  return (\n    <Box className={styles.Container}>\n      <label className={styles.Label}>\n        Find contact by the name\n        <Input\n          className={styles.inputsForm}\n          type=\"text\"\n          name=\"filter\"\n          onChange={handlerFilter}\n          placeholder=\"Search Contact\"\n        />\n      </label>\n      <ContactList />\n    </Box>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactBox\":\"ContactForm_ContactBox__rxZYF\",\"Description\":\"ContactForm_Description__QE57X\",\"inputsForm\":\"ContactForm_inputsForm__IlO7X\",\"TypeText\":\"ContactForm_TypeText__ee3qu\",\"ButtonContainer\":\"ContactForm_ButtonContainer__AASUa\",\"SubmitButton\":\"ContactForm_SubmitButton__XO67V\",\"ErrorMessage\":\"ContactForm_ErrorMessage__EqUtm\",\"SuccessMessage\":\"ContactForm_SuccessMessage__kjkvM\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { Box } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/react';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handlerSubmit(evt) {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return toast.warn(`${name} is alredy in contacts.`);\n    }\n\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  }\n\n  return (\n    <Box className={styles.ContactBox}>\n      <form className={styles.inputsForm} onSubmit={handlerSubmit}>\n        <ul>\n          <li>\n            <p className={styles.Description}>Name</p>\n\n            <Input\n              className={styles.TypeText}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              placeholder=\"Name\"\n            />\n          </li>\n          <li>\n            <p className={styles.Description}>Contact</p>\n\n            <Input\n              className={styles.TypeText}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              placeholder=\"Phone number\"\n            />\n          </li>\n        </ul>\n        <div className={styles.ButtonContainer}>\n          <Button className={styles.SubmitButton} type=\"submit\">\n            Add contact\n          </Button>\n        </div>\n      </form>\n    </Box>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"Container\":\"Contacts_Container__X0Qe7\"};","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Box } from '@chakra-ui/react';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Filter } from '../../components/Filter/Filter';\nimport ContactForm from 'components/Form/ContactForm';\nimport styles from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box className={styles.Container}>\n      <ContactForm />\n\n      <Filter />\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectContactsFilter","filters","filter","ContactList","useSelector","filterValue","toLowerCase","dispatch","useDispatch","visibilityContacts","contact","name","includes","className","styles","map","as","MdSettingsCell","number","onClick","deleteContact","id","handleDelete","Filter","I","type","onChange","evt","setFilterContacts","target","value","placeholder","onSubmit","preventDefault","form","find","toast","addContact","reset","pattern","title","required","useEffect","fetchContacts"],"sourceRoot":""}